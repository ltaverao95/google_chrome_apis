.wrapper {
  display: flex;
  gap: 1.75rem;
  align-items: flex-start;
  max-width: 1400px;
  margin: 0 auto;
  padding: 1.5rem clamp(1rem, 2vw, 2rem);
  box-sizing: border-box;
  width: 100%;
}

.left {
  flex: 0 0 70%;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  min-width: 0;
}

.right {
  flex: 0 0 30%;
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
  position: sticky;
  top: 1rem;
  min-width: 240px;
}

.formBlock {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.field {
  display: flex;
  flex-direction: column;
  gap: .55rem;
}

.label {
  font-size: .75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: .75px;
  color: #475569;
}

.textarea {
  width: 100%;
  font-family: inherit;
  font-size: .9rem;
  line-height: 1.45;
  padding: .65rem .75rem;
  border: 1px solid #d5dae0;
  border-radius: 8px;
  resize: vertical;
  min-height: 2.8rem;      /* ~2 lines */
  max-height: 9.2rem;      /* ~6 lines */
  background: #fff;
  box-sizing: border-box;
  transition: border-color .15s, box-shadow .15s;
}

.textarea:focus {
  outline: none;
  border-color: #2563eb;
  box-shadow: 0 0 0 1px #2563eb33;
}

.readonly {
  background: #f8fafc;
  resize: none;
  min-height: unset;
  max-height: unset;
}

.checkboxRow {
  display: flex;
  align-items: center;
  gap: .55rem;
  font-size: .8rem;
  user-select: none;
  color: #334155;
}

.checkboxRow input {
  width: 16px;
  height: 16px;
  cursor: pointer;
}

.actions {
  display: flex;
  justify-content: flex-start;
}

.button {
  background: #2563eb;
  color: #fff;
  font-weight: 600;
  font-size: .85rem;
  border: none;
  border-radius: 8px;
  padding: .65rem 1.3rem;
  cursor: pointer;
  letter-spacing: .4px;
  transition: background .15s, transform .15s;
}

.button:hover:not(:disabled) {
  background: #1d4fc5;
}

.button:active:not(:disabled) {
  transform: translateY(1px);
}

.button:disabled {
  opacity: .55;
  cursor: not-allowed;
  background: #1d4fc5;
}

.outputSection {
  display: flex;
  flex-direction: column;
  gap: .55rem;
}

.outputTitle {
  margin: 0;
  font-size: .85rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: .85px;
  color: #334155;
}

.settingsTitle {
  margin: 0;
  font-size: .9rem;
  font-weight: 700;
  letter-spacing: .5px;
  color: #1e293b;
}

.settingsCard {
  background: #f1f5f9;
  border: 1px solid #e2e8f0;
  border-radius: 10px;
  padding: 1rem .95rem 1.15rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* Toggle */
.toggleRow {
  display: flex;
  flex-wrap: wrap;
  gap: 1.1rem;
  align-items: flex-start;
}

.toggleLabel {
  font-size: .7rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: .75px;
  color: #475569;
}

.switch {
  position: relative;
  width: 48px;
  height: 26px;
  display: inline-block;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  inset: 0;
  background: #cbd5e1;
  border-radius: 40px;
  cursor: pointer;
  transition: background-color .25s;
}

.slider::before {
  content: "";
  position: absolute;
  width: 20px;
  height: 20px;
  left: 3px;
  top: 3px;
  background: #ffffff;
  border-radius: 50%;
  box-shadow: 0 2px 4px rgba(0,0,0,.25);
  transition: transform .25s;
}

.switch input:checked + .slider {
  background: #2563eb;
}

.switch input:checked + .slider::before {
  transform: translateX(22px);
}

/* Language Card */
.languageCard {
  background: linear-gradient(135deg, #f8fafc 0%, #eef2f7 100%);
  border: 1px solid #e2e8f0;
  border-radius: 12px;
  padding: 1rem .95rem 1.15rem;
  display: flex;
  flex-direction: column;
  gap: .85rem;
  box-shadow: 0 2px 4px -2px rgba(0,0,0,.08), 0 4px 10px -2px rgba(0,0,0,.05);
  position: relative;
  overflow: hidden;
}

.languageCard::before {
  content: "";
  position: absolute;
  inset: 0;
  background:
    radial-gradient(circle at 85% 15%, rgba(99,102,241,0.08), transparent 60%),
    radial-gradient(circle at 10% 90%, rgba(59,130,246,0.08), transparent 55%);
  pointer-events: none;
}

.languageLabel {
  display: flex;
  flex-direction: column;
  gap: .55rem;
  position: relative;
}

/* Arrow via pseudo-element to ensure visibility across browsers */
.languageLabel::after {
  content: "";
  position: absolute;
  right: 14px;
  top: 39px; /* aligns with select vertical center (adjust if needed) */
  width: 12px;
  height: 12px;
  pointer-events: none;
  background: center / 12px 12px no-repeat
    url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' stroke='%2362748b' stroke-width='1.8' fill='none' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M3 5l3 3 3-3'/%3E%3C/svg%3E");
  transition: filter .25s;
}

.languageTitle {
  font-size: .7rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: .85px;
  color: #475569;
}

.languageSelect {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  padding: .65rem .9rem;
  padding-right: 2.5rem; /* space for arrow */
  font-size: .8rem;
  border: 1px solid #cbd5e1;
  border-radius: 8px;
  background-color: #ffffff;
  color: #1e293b;
  font-family: inherit;
  line-height: 1.25;
  box-shadow: 0 1px 2px rgba(0,0,0,.08);
  transition: border-color .15s, box-shadow .15s, background-color .3s;
}

.languageSelect:focus {
  outline: none;
  border-color: #2563eb;
  box-shadow: 0 0 0 1px #2563eb40, 0 2px 6px -2px rgba(37,99,235,.4);
}

.languageSelect:hover {
  border-color: #94a3b8;
}

.languageSelect option {
  color: #1e293b;
  background: #ffffff;
}

/* Streaming Group */
.streamingGroup {
  display: flex;
  align-items: center;
  gap: .55rem;
}

.inlineCheckbox {
  display: inline-flex;
  align-items: center;
  gap: .45rem;
  font-size: .65rem;
  font-weight: 500;
  color: #475569;
  background: #f1f5f9;
  border: 1px solid #e2e8f0;
  padding: .45rem .6rem;
  border-radius: 6px;
  line-height: 1.1;
  cursor: pointer;
  user-select: none;
}

.inlineCheckbox input {
  width: 14px;
  height: 14px;
  cursor: pointer;
  accent-color: #2563eb;
}

.inlineCheckbox:hover {
  background: #e8edf3;
  border-color: #d2dae3;
}

/* Reuse toggleRow; add a flex column on narrow screens if needed */
.toggleRow {
  display: flex;
  flex-wrap: wrap;
  gap: 1.1rem;
  align-items: flex-start;
}

.toggleGroup {
  display: flex;
  flex-direction: column;
  gap: .45rem;
  min-width: 160px;
  max-width: 200px;
}

/* Optional: shrink label text on very long labels */
.toggleGroup .toggleLabel {
  line-height: 1.15;
  word-break: break-word;
}

/* Responsive tweak */
@media (max-width: 700px) {
  .toggleGroup {
    min-width: 140px;
    flex: 1 1 45%;
  }
  .toggleRow {
    gap: .9rem .8rem;
  }
}

/* Responsive */
@media (max-width: 1000px) {
  .wrapper {
    flex-direction: column;
  }
  .left, .right {
    flex: 1 1 auto;
    width: 100%;
    position: static;
  }
  .right {
    order: -1;
  }
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  .textarea {
    background: #1f2430;
    color: #e2e8f0;
    border-color: #394150;
  }
  .readonly {
    background: #232a36;
  }
  .settingsCard {
    background: #1f2933;
    border-color: #334250;
  }
  .outputTitle,
  .settingsTitle,
  .toggleLabel {
    color: #e2e8f0;
  }
  .slider {
    background: #475569;
  }
  .switch input:checked + .slider {
    background: #3b82f6;
  }
  .button {
    background: #3b82f6;
  }
  .button:hover:not(:disabled) {
    background: #2563eb;
  }
  .languageCard {
    background: linear-gradient(135deg,#1f2933 0%, #273445 100%);
    border-color: #334250;
    box-shadow: 0 2px 6px -2px rgba(0,0,0,.6);
  }
  .languageCard::before {
    background:
      radial-gradient(circle at 85% 15%, rgba(99,102,241,0.18), transparent 60%),
      radial-gradient(circle at 10% 90%, rgba(59,130,246,0.18), transparent 55%);
  }
  .languageLabel::after {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' stroke='%2394a3b8' stroke-width='1.8' fill='none' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M3 5l3 3 3-3'/%3E%3C/svg%3E");
  }

  .languageSelect {
    background-color: #1f2430;
    border-color: #3a4656;
    color: #f1f5f9;
    box-shadow: 0 1px 2px rgba(0,0,0,.5);
  }

  .languageSelect:focus {
    border-color: #3b82f6;
    box-shadow: 0 0 0 1px #3b82f640, 0 2px 6px -2px rgba(59,130,246,.4);
  }

  .languageSelect option {
    background: #1f2430;
    color: #f1f5f9;
  }

  .inlineCheckbox {
    background: #273445;
    border-color: #334250;
    color: #d5dce5;
  }
  .inlineCheckbox:hover {
    background: #2f3c4d;
    border-color: #3d4b5b;
  }
  .inlineCheckbox input {
    accent-color: #3b82f6;
  }
}